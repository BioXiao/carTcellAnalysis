left_join(salmon_quant_dat %>%
select(lib_id, Name, TPM) %>%
spread(Name, TPM) %>%
dplyr::rename(CAR = `CAR-1`) %>%
relabel_transcripts(xcript_dat))
}
# crazy function to build plots
plot_coverage <- function(formatted_cov_dat, gtf_dat,
fits_only = FALSE, all_fits = FALSE,
color_by = "lib_num") {
v_pal <- viridis_pal()(8)
# add lib numbers for coloring
formatted_cov_dat <- formatted_cov_dat %>%
group_by(donor_id, timepoint) %>%
mutate(lib_num = dense_rank(lib_id) / n_distinct(lib_id),
lib_num = as.character(lib_num)) %>%
ungroup()
# determine plot height
height <- log2(max(formatted_cov_dat$cov, na.rm = TRUE) + 1)
# build plot
p_cov <- ggplot() +
geom_rect(data = gtf_dat,
aes(xmin = start, xmax = end, ymin = 0, ymax = height,
fill = segment),
alpha = 0.5, colour = "white")
if (!fits_only) {
p_cov <- p_cov +
geom_point(data = formatted_cov_dat,
aes_string(x = "pos", y = "log2(cov + 1)"),
stroke = 0.5, size = 1.5, alpha = 0.3,
colour = "#333333")
}
if (all_fits) {
p_cov <- p_cov +
geom_smooth(data = formatted_cov_dat,
aes_string(x = "pos", y = "log2(cov + 1)",
group = "lib_id", colour = color_by),
method = "gam", formula = y ~ s(x), se = FALSE,
size = 1.5)
} else {
p_cov <- p_cov +
geom_smooth(data = formatted_cov_dat,
aes(x = pos, y = log2(cov + 1)),
size = 2, colour = viridis_pal()(12)[11])
}
p_cov <- p_cov +
scale_color_viridis(begin = 0, end = 1, option = "B") +
scale_fill_viridis(discrete = TRUE, direction = -1) +
theme_bw() +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_continuous(expand = c(0.01, 0), limits = c(0, height)) +
theme(legend.position = "top")
return(p_cov)
}
# create CAR coverage plots -----------------------------------------------
car_plot <- bulk_cov_dat %>%
mutate(samples = "CAR T-cells (bulk)") %>%
bind_rows(p89_c1_cov_dat %>%
mutate(samples = "CAR T-cells (single)")) %>%
bind_rows(p85_c1_cov_dat %>%
mutate(samples = "MAI T-cells (single)")) %>%
plot_coverage(car_dat, color_by = "log2(CAR + 1)",
all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR segment",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid( ~ samples) +
theme(panel.margin = unit(2, "lines"))
car_plot
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
#     draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
#     draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.95, 0.55, 0.55),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.5,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# create CAR coverage plots -----------------------------------------------
car_plot <- bulk_cov_dat %>%
mutate(samples = "CAR T-cells (bulk)") %>%
bind_rows(p89_c1_cov_dat %>%
mutate(samples = "CAR T-cells (single)")) %>%
bind_rows(p85_c1_cov_dat %>%
mutate(samples = "MAI T-cells (single)")) %>%
plot_coverage(car_dat, color_by = "log2(CAR + 1)",
all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR segment",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid( ~ samples) +
theme(panel.margin = unit(2, "lines"),
plot.margin = unit(1, "lines"))
car_plot
# create CAR coverage plots -----------------------------------------------
car_plot <- bulk_cov_dat %>%
mutate(samples = "CAR T-cells (bulk)") %>%
bind_rows(p89_c1_cov_dat %>%
mutate(samples = "CAR T-cells (single)")) %>%
bind_rows(p85_c1_cov_dat %>%
mutate(samples = "MAI T-cells (single)")) %>%
plot_coverage(car_dat, color_by = "log2(CAR + 1)",
all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR segment",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid( ~ samples) +
theme(panel.margin = unit(2, "lines"),
plot.margin = unit(c(0, 1, 0, 1), "lines"))
car_plot
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
#     draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
#     draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.5,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# create EGFR coverage plots ----------------------------------------------
xcript_labels = list()
for (xcript in egfrt_dat$egfr_xcript) {
xcript_labels[xcript] <- egfrt_dat$seqnames[which(egfrt_dat$egfr_xcript == xcript)]
}
xcript_labels <- unlist(xcript_labels)
egfr_plot <- p89_c1_egfr_cov_dat %>%
plot_coverage(egfrt_dat, all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR overlap",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_wrap(~ egfr_xcript, scales = "free_x",
labeller = labeller(egfr_xcript = xcript_labels))
egfr_plot
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
# draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
#     draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.5,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
#     draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.5,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# create plot of CAR coverage for remaining libs ---------------------------
donor_id_labels <- c(x145 = "x145", x194 = "x194", x228 = "x228")
# donor_id_labels <- c(x145 = "ALL1", x194 = "ALL2", x228 = "ALL3")
timepoint_labels <- c(IP = "IP", t1 = "Peak", t2 = "Late")
car_plot_2 <- p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov),
car_detected) %>%
plot_coverage(car_dat, all_fits = TRUE, fits_only = TRUE,
color_by = "log2(CAR + 1)") +
guides(fill = FALSE,
colour = guide_colorbar(title = "CAR abundance [log2(TPM + 1)]",
title.theme = element_text(size = 10,
face = "bold",
angle = 0))) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid(donor_id ~ timepoint,
labeller = labeller(donor_id = donor_id_labels,
timepoint = timepoint_labels))
car_plot_2
sessionInfo()
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.5,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# create EGFR coverage plots ----------------------------------------------
xcript_labels = list()
for (xcript in egfrt_dat$egfr_xcript) {
xcript_labels[xcript] <- egfrt_dat$seqnames[which(egfrt_dat$egfr_xcript == xcript)]
}
xcript_labels <- unlist(xcript_labels)
egfr_plot <- p89_c1_egfr_cov_dat %>%
plot_coverage(egfrt_dat, all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR overlap",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_wrap(~ egfr_xcript, scales = "free_x",
labeller = labeller(egfr_xcript = xcript_labels)) +
theme(panel.margin = unit(1, "lines"),
plot.margin = unit(c(0, 1, 0, 1), "lines"))
# create plot of CAR coverage for remaining libs ---------------------------
donor_id_labels <- c(x145 = "x145", x194 = "x194", x228 = "x228")
# donor_id_labels <- c(x145 = "ALL1", x194 = "ALL2", x228 = "ALL3")
timepoint_labels <- c(IP = "IP", t1 = "Peak", t2 = "Late")
car_plot_2 <- p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov),
car_detected) %>%
plot_coverage(car_dat, all_fits = TRUE, fits_only = TRUE,
color_by = "log2(CAR + 1)") +
guides(fill = FALSE,
colour = guide_colorbar(title = "CAR abundance [log2(TPM + 1)]",
title.theme = element_text(size = 10,
face = "bold",
angle = 0))) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid(donor_id ~ timepoint,
labeller = labeller(donor_id = donor_id_labels,
timepoint = timepoint_labels)) +
theme(panel.margin = unit(1, "lines"),
plot.margin = unit(c(0, 1, 0, 1), "lines"))
# car_plot_2
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.4, 0.6) +
draw_plot(car_plot_2, 0.4, 0, 0.6, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.4), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.6,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# create EGFR coverage plots ----------------------------------------------
xcript_labels = list()
for (xcript in egfrt_dat$egfr_xcript) {
xcript_labels[xcript] <- egfrt_dat$seqnames[which(egfrt_dat$egfr_xcript == xcript)]
}
xcript_labels <- unlist(xcript_labels)
egfr_plot <- p89_c1_egfr_cov_dat %>%
plot_coverage(egfrt_dat, all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR overlap",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_wrap(~ egfr_xcript, scales = "free_x",
labeller = labeller(egfr_xcript = xcript_labels)) +
theme(plot.margin = unit(c(0, 1, 0, 1), "lines"))
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.45, 0.6) +
draw_plot(car_plot_2, 0.45, 0, 0.55, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.45), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.6,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
# define functions --------------------------------------------------------
# create/format data frame for plotting coverage
prep_cov_dat <- function(lib_dat, cov_dat, metric_dat) {
lib_dat %>%
clean_dup_names() %>%
simplify_lib_id() %>%
clean_donor_ids() %>%
select(lib_id, donor_id, timepoint) %>%
relabel_timepoints() %>%
left_join(cov_dat, by = c("lib_id" = "lib_id")) %>%
left_join(metric_dat %>%
clean_dup_names() %>%
simplify_lib_id() %>%
select(lib_id, fastq_total_reads,
median_cv_coverage, mapped_reads_w_dups),
by = c("lib_id" = "lib_id")) %>%
left_join(map_rate_dat, by = c("lib_id" = "lib_id")) %>%
mutate(mapped_reads = fastq_total_reads * map_rate,
norm_cov = cov / mapped_reads) %>%
left_join(salmon_quant_dat %>%
select(lib_id, Name, TPM) %>%
spread(Name, TPM) %>%
dplyr::rename(CAR = `CAR-1`) %>%
relabel_transcripts(xcript_dat))
}
# crazy function to build plots
plot_coverage <- function(formatted_cov_dat, gtf_dat,
fits_only = FALSE, all_fits = FALSE,
color_by = "lib_num") {
v_pal <- viridis_pal()(8)
# add lib numbers for coloring
formatted_cov_dat <- formatted_cov_dat %>%
group_by(donor_id, timepoint) %>%
mutate(lib_num = dense_rank(lib_id) / n_distinct(lib_id),
lib_num = as.character(lib_num)) %>%
ungroup()
# determine plot height
height <- log2(max(formatted_cov_dat$cov, na.rm = TRUE) + 1)
# build plot
p_cov <- ggplot() +
geom_rect(data = gtf_dat,
aes(xmin = start, xmax = end, ymin = 0, ymax = height,
fill = segment),
alpha = 0.5, colour = "white")
if (!fits_only) {
p_cov <- p_cov +
geom_point(data = formatted_cov_dat,
aes_string(x = "pos", y = "log2(cov + 1)"),
stroke = 0.5, size = 1.5, alpha = 0.3,
colour = "#333333")
}
if (all_fits) {
p_cov <- p_cov +
geom_smooth(data = formatted_cov_dat,
aes_string(x = "pos", y = "log2(cov + 1)",
group = "lib_id", colour = color_by),
method = "gam", formula = y ~ s(x), se = FALSE,
size = 1)
} else {
p_cov <- p_cov +
geom_smooth(data = formatted_cov_dat,
aes(x = pos, y = log2(cov + 1)),
size = 1.5, colour = viridis_pal()(12)[11])
}
p_cov <- p_cov +
scale_color_viridis(begin = 0, end = 1, option = "B") +
scale_fill_viridis(discrete = TRUE, direction = -1) +
theme_bw() +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_continuous(expand = c(0.01, 0), limits = c(0, height)) +
theme(legend.position = "top")
return(p_cov)
}
# create CAR coverage plots -----------------------------------------------
car_plot <- bulk_cov_dat %>%
mutate(samples = "CAR T-cells (bulk)") %>%
bind_rows(p89_c1_cov_dat %>%
mutate(samples = "CAR T-cells (single)")) %>%
bind_rows(p85_c1_cov_dat %>%
mutate(samples = "MAI T-cells (single)")) %>%
plot_coverage(car_dat, color_by = "log2(CAR + 1)",
all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR segment",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid( ~ samples) +
theme(panel.margin = unit(2, "lines"),
plot.margin = unit(c(0, 1, 0, 1), "lines"))
# create EGFR coverage plots ----------------------------------------------
xcript_labels = list()
for (xcript in egfrt_dat$egfr_xcript) {
xcript_labels[xcript] <- egfrt_dat$seqnames[which(egfrt_dat$egfr_xcript == xcript)]
}
xcript_labels <- unlist(xcript_labels)
egfr_plot <- p89_c1_egfr_cov_dat %>%
plot_coverage(egfrt_dat, all_fits = FALSE, fits_only = FALSE) +
guides(fill = guide_legend(title = "CAR overlap",
title.theme = element_text(size = 10,
face = "bold",
angle = 0),
nrow = 1)) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_wrap(~ egfr_xcript, scales = "free_x",
labeller = labeller(egfr_xcript = xcript_labels)) +
theme(plot.margin = unit(c(0, 1, 0, 1), "lines"))
# create plot of CAR coverage for remaining libs ---------------------------
donor_id_labels <- c(x145 = "x145", x194 = "x194", x228 = "x228")
# donor_id_labels <- c(x145 = "ALL1", x194 = "ALL2", x228 = "ALL3")
timepoint_labels <- c(IP = "IP", t1 = "Peak", t2 = "Late")
car_plot_2 <- p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov),
car_detected) %>%
plot_coverage(car_dat, all_fits = TRUE, fits_only = TRUE,
color_by = "log2(CAR + 1)") +
guides(fill = FALSE,
colour = guide_colorbar(title = "CAR abundance [log2(TPM + 1)]",
title.theme = element_text(size = 10,
face = "bold",
angle = 0))) +
xlab("Position [bp]") +
ylab("Coverage [log2(reads + 1)]") +
facet_grid(donor_id ~ timepoint,
labeller = labeller(donor_id = donor_id_labels,
timepoint = timepoint_labels)) +
theme(panel.margin = unit(1, "lines"),
plot.margin = unit(c(0, 1, 0, 1), "lines"))
# car_plot_2
# build combined plot -----------------------------------------------------
combined_plot <- ggdraw() +
draw_plot(car_plot, 0, 0.6, 1, 0.4) +
draw_plot(egfr_plot, 0, 0, 0.45, 0.6) +
draw_plot(car_plot_2, 0.45, 0, 0.55, 0.6) +
draw_plot_label(c("A", "B", "C"), c(0, 0, 0.45), c(0.98, 0.58, 0.58),
size = 12)
# save plot ---------------------------------------------------------------
# png("car_detect_fig.png", width = 17.35, height = 17.35, units = "cm", res = 300,
#     colortype = "true")
# theme_set(theme_bw(base_size = 8))
# theme_update(axis.text = element_text(size = 8))
# print(combined_plot)
# invisible(dev.off())
# save_plot("car_detect_fig.png", combined_plot)
ggsave("car_detect_fig.png", combined_plot,
scale = 1.6,
width = 17.35, height = 17.35, units = "cm", dpi = 300)
p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov)) %>%
group_by(car_detected, nz_cov) %>%
summarise(n_libs = n_distinct(lib_id))
391+86+77
p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov)) %>%
group_by(car_detected, nz_cov) %>%
summarise(n_libs = n_distinct(lib_id))
p89_cov_w_car_detect_dat %>%
filter(!is.na(nz_cov),
lib_id %in% lib_list) %>%
group_by(car_detected, nz_cov) %>%
summarise(n_libs = n_distinct(lib_id))
351+81+74
77/554
74/511
n_distinct(p89_c1_cov_dat)
n_distinct(p89_c1_cov_dat$lib_id)
p89_c1_cov_dat <- sc_lib_dat %>%
prep_cov_dat(car_cov_dat, sc_metric_dat) %>%
filter(lib_id %in% lib_list)
n_distinct(p89_c1_cov_dat$lib_id)
source('~/code/github/projects/carTcellAnalysis/scripts/plot_car_cov.R', echo=TRUE)
n_distinct(p85_c1_cov_dat$lib_id)
